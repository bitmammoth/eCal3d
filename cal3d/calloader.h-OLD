//****************************************************************************//
// loader.h                                                                   //
// Copyright (C) 2001, 2002 Bruno 'Beosil' Heidelberger                       //
//****************************************************************************//
// This library is free software; you can redistribute it and/or modify it    //
// under the terms of the GNU Lesser General Public License as published by   //
// the Free Software Foundation; either version 2.1 of the License, or (at    //
// your option) any later version.                                            //
//****************************************************************************//

#ifndef CAL_LOADER_H
#define CAL_LOADER_H

//****************************************************************************//
// Includes                                                                   //
//****************************************************************************//

#include "calglobal.h"

//****************************************************************************//
// Forward declarations                                                       //
//****************************************************************************//

class CalCoreModel;
class CalCoreBone;
class CalCoreAnimation;
class CalCoreTrack;
class CalCoreKeyframe;
class CalCoreSubmesh;

//****************************************************************************//
// Class declaration                                                          //
//****************************************************************************//

 /*****************************************************************************/
/** The loader class.
  *****************************************************************************/

class CAL3D_API CalLoader: public CalLoaderUserData
{
// constructors/destructor
public:
  CalLoader();
  virtual ~CalLoader();
	
// member functions
public:
  bool loadCoreAnimation(CalCoreAnimation *anim, const std::string& strFilename);
  bool loadCoreModel(CalCoreModel *model, const std::string& strFilename);
  bool loadCoreModel(CalCoreModel *model, const std::string& strFilename, const std::string& strFilenameM);

  bool loadCoreAnimation(CalCoreAnimation *anim, std::istream& src, const std::string& strFilename);
  bool loadCoreModel(CalCoreModel *model, std::istream& src, const std::string& strFilename);
  bool loadCoreModel(CalCoreModel *model, std::istream& src1, const std::string& strFilename1,
		                          std::istream& src2, const std::string& strFilename2);
  
  bool loadCoreAnimation(CalCoreAnimation *anim, char *data, int len, const std::string& strFilename);
  bool loadCoreModel(CalCoreModel *model, char *data, int len, const std::string& strFilename);
  bool loadCoreModel(CalCoreModel *model, char *data1, int len1, const std::string& strFilename1,
	                                  char *data2, int len2, const std::string& strFilename2);
  
protected:
  CalCoreBone *loadCoreBones(std::istream& file, const std::string& strFilename);
  CalCoreKeyframe *loadCoreKeyframe(std::istream& file, const std::string& strFilename);
  CalCoreSubmesh *loadCoreSubmesh(std::istream& file, const std::string& strFilename);
  CalCoreTrack *loadCoreTrack(std::istream& file, const std::string& strFilename);
};

#endif

//****************************************************************************//
